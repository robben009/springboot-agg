<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>springboot-agg</artifactId>
        <groupId>springboot-agg.groupId</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>base-project</artifactId>
    <packaging>jar</packaging>

    <properties>
        <java.version>17</java.version>
        <encoding>UTF-8</encoding>

        <knife4j-v>4.0.0</knife4j-v>
        <mysql-connect-java-v>8.0.31</mysql-connect-java-v>
        <druid-v>1.2.15</druid-v>
        <mybatis-plus-boot-starter-v>3.5.3.1</mybatis-plus-boot-starter-v>
        <mybatis-generator-maven-plugin-v>1.4.1</mybatis-generator-maven-plugin-v>

        <easyexcel-v>3.1.4</easyexcel-v>
        <json-path-v>2.7.0</json-path-v>

        <jruby-complete-v>9.4.0.0</jruby-complete-v>
        <docker-maven-plugin-v>1.2.0</docker-maven-plugin-v>
        <redisson-v>3.13.4</redisson-v>
        <caffeine-v>2.6.2</caffeine-v>
        <test-v>6.13.1</test-v>
    </properties>


    <dependencies>
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
            <version>${knife4j-v}</version>
        </dependency>

        <!-- 自定义的jar的一些依赖 -->
        <dependency>
            <groupId>robben2</groupId>
            <artifactId>customStarter</artifactId>
            <version>1.0.0</version>
        </dependency>

        <!-- cloud alibaba 依赖 -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>

        <!-- spring的一些依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <scope>true</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>

        <!--####################数据库连接配置mybatis########################-->
        <!--mysql 连接驱动链接-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connect-java-v}</version>
        </dependency>

        <!--Druid 数据库连接池-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid-v}</version>
        </dependency>

        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatis-plus-boot-starter-v}</version>
        </dependency>

        <!-- ###################第三方框架#####################-->
        <dependency>
            <groupId>org.redisson</groupId>
            <artifactId>redisson-spring-boot-starter</artifactId>
            <version>${redisson-v}</version>
        </dependency>

        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
            <version>${caffeine-v}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>easyexcel</artifactId>
            <version>${easyexcel-v}</version>
        </dependency>

        <dependency>
            <groupId>org.jruby</groupId>
            <artifactId>jruby-complete</artifactId>
            <version>${jruby-complete-v}</version>
        </dependency>

        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>${json-path-v}</version>
        </dependency>

        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>2.0.1.Final</version>
            <scope>compile</scope>
        </dependency>

        <!--        <dependency>-->
<!--            <groupId>org.testng</groupId>-->
<!--            <artifactId>testng</artifactId>-->
<!--            <version>${test-v}</version>-->
<!--        </dependency>-->

    </dependencies>



    <!--    <build>-->
    <!--        <plugins>-->
    <!--            &lt;!&ndash; 指定启动类，将依赖打成外部jar包 &ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>org.apache.maven.plugins</groupId>-->
    <!--                <artifactId>maven-jar-plugin</artifactId>-->
    <!--                <configuration>-->
    <!--                    <archive>-->
    <!--                        &lt;!&ndash; 生成的jar中，不要包含pom.xml和pom.properties这两个文件 &ndash;&gt;-->
    <!--                        <addMavenDescriptor>false</addMavenDescriptor>-->
    <!--                        <manifest>-->
    <!--                            &lt;!&ndash; 是否要把第三方jar加入到类构建路径 &ndash;&gt;-->
    <!--                            <addClasspath>true</addClasspath>-->
    <!--                            &lt;!&ndash; 外部依赖jar包的最终位置 &ndash;&gt;-->
    <!--                            <classpathPrefix>lib/</classpathPrefix>-->
    <!--                            &lt;!&ndash; 项目启动类 &ndash;&gt;-->
    <!--                            <mainClass>com.robben.Server2Application</mainClass>-->
    <!--                        </manifest>-->
    <!--                    </archive>-->
    <!--                </configuration>-->
    <!--            </plugin>-->
    <!--            &lt;!&ndash;拷贝依赖到jar外面的lib目录&ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>org.apache.maven.plugins</groupId>-->
    <!--                <artifactId>maven-dependency-plugin</artifactId>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <id>copy-lib</id>-->
    <!--                        <phase>package</phase>-->
    <!--                        <goals>-->
    <!--                            <goal>copy-dependencies</goal>-->
    <!--                        </goals>-->
    <!--                        <configuration>-->
    <!--                            <outputDirectory>target/lib</outputDirectory>-->
    <!--                            <excludeTransitive>false</excludeTransitive>-->
    <!--                            <stripVersion>false</stripVersion>-->
    <!--                            <includeScope>runtime</includeScope>-->
    <!--                        </configuration>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--            </plugin>-->
    <!--        </plugins>-->
    <!--    </build>-->


    <!--    打全量包-->
    <build>
        <finalName>base-service</finalName>
        <plugins>
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash; 没有该配置，devtools 不生效 &ndash;&gt;-->
<!--                    <addResources>true</addResources>-->
<!--                    &lt;!&ndash; 打包配置跳过测试 &ndash;&gt;-->
<!--&lt;!&ndash;                    <skip>true</skip>&ndash;&gt;-->
<!--                </configuration>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>
        </plugins>
    </build>


    <!--    &lt;!&ndash;使用docker容器自动构建&ndash;&gt;-->
    <!--    <build>-->
    <!--        <plugins>-->
    <!--            <plugin>-->
    <!--                <groupId>org.springframework.boot</groupId>-->
    <!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
    <!--            </plugin>-->

    <!--            &lt;!&ndash;配置项目打包后直接上传到镜像到服务器&ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>com.spotify</groupId>-->
    <!--                <artifactId>docker-maven-plugin</artifactId>-->
    <!--                <version>1.2.0</version>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <id>build-image</id>-->
    <!--                        <phase>package</phase>-->
    <!--                        <goals>-->
    <!--                            <goal>build</goal>-->
    <!--                        </goals>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--                <configuration>-->
    <!--                    <dockerHost>http://212.64.18.166:52375</dockerHost>-->
    <!--                    <imageName>robben/${project.artifactId}</imageName>-->
    <!--                    <imageTags>-->
    <!--                        <imageTag>${project.version}</imageTag>-->
    <!--                    </imageTags>-->
    <!--                    <forceTags>true</forceTags>-->
    <!--                    <dockerDirectory>${project.basedir}</dockerDirectory>-->
    <!--                    <resources>-->
    <!--                        <resource>-->
    <!--                            <targetPath>/</targetPath>-->
    <!--                            <directory>${project.build.directory}</directory>-->
    <!--                            <include>${project.build.finalName}.jar</include>-->
    <!--                        </resource>-->
    <!--                    </resources>-->
    <!--                </configuration>-->
    <!--            </plugin>-->

    <!--            &lt;!&ndash;mybatis自动生成工具 &ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>org.mybatis.generator</groupId>-->
    <!--                <artifactId>mybatis-generator-maven-plugin</artifactId>-->
    <!--                <version>${mybatis-generator-maven-plugin-v}</version>-->
    <!--                <configuration>-->
    <!--                    <configurationFile>${basedir}/src/main/resources/generator/generatorConfig.xml</configurationFile>-->
    <!--                    <overwrite>true</overwrite>-->
    <!--                    <verbose>true</verbose>-->
    <!--                </configuration>-->
    <!--            </plugin>-->

    <!--        </plugins>-->
    <!--    </build>-->

    <repositories>
        <repository>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
            <id>jcenter-releases</id>
            <name>jcenter</name>
            <url>http://jcenter.bintray.com</url>
        </repository>
    </repositories>


</project>